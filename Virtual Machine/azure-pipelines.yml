trigger:
  branches:
    include:
      - master
  paths:
    include:
      - 'Virtual Machine'

schedules:
  - cron: "0 * * * *" # Every hour
    displayName: Hourly Check
    branches:
      include:
        - master
    always: "true"

pool:
  name: "selfhosted" # Your self-hosted Windows agent pool name

variables:
  azureServiceConnection: "azureumi_serviceconnection" # Azure service connection name
  azureSubscriptionId: "37fd4306-4815-4e3a-a2da-6905810ccba6"
  workingDirectory: "Virtual Machine" # Folder where Terraform files live

stages:
  - stage: Terraform
    jobs:
      - job: Deploy
        steps:
          - checkout: self

          # ðŸ‘‡ Show actual working directory of the agent
          - script: |
              echo "Agent working directory: %CD%"
            displayName: 'Show working directory (Windows CMD)'

          # ðŸ‘‡ Optional: List files to verify repo contents
          - script: dir
            displayName: 'List files in root'

          - task: AzureCLI@2
            displayName: "Terraform Init, Plan, Apply"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: "ps"
              scriptLocation: "inlineScript"
              workingDirectory: $(workingDirectory)
              inlineScript: |
                Write-Host "Downloading Terraform 1.9.7..."
                Invoke-WebRequest -Uri "https://releases.hashicorp.com/terraform/1.9.7/terraform_1.9.7_windows_amd64.zip" -OutFile "terraform.zip"

                Expand-Archive -Path "terraform.zip" -DestinationPath ".\terraform"

                $terraformExe = "$(System.DefaultWorkingDirectory)\$(workingDirectory)\terraform\terraform.exe"

                Write-Host "Terraform version:"
                & $terraformExe version

                # Set environment variable for Azure provider
                $env:ARM_SUBSCRIPTION_ID = "$(azureSubscriptionId)"

                Write-Host "Initializing Terraform..."
                & $terraformExe init

                Write-Host "Planning Terraform..."
                & $terraformExe plan -out=tfplan

                Write-Host "Applying Terraform..."
                & $terraformExe apply -auto-approve tfplan
